name: Build job

on:
  # Every Saturday at 21:00 UTC
#  schedule:
#    - cron: '0 21 * * 6'
  # Manual triggers
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref (Optional)
        required: false
      dry-run:
        description: Creates a draft release
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  BuildBinaries:
    name: Build application packages
    strategy:
      matrix:
        runtime: [ linux-x64, win-x64, android ]
        include:
          - runtime: linux-x64
            arch: x64
            os: ubuntu-latest
            shell: bash
            build: :desktop:packageUberJarForCurrentOS :desktop:packageDeb
            setupCl: ./.github/scripts/SetupClUnix.sh

          #          - runtime: linux-fedora-x64
          #            arch: x64
          #            os: ubuntu-latest
          #            shell: bash
          #            build: :desktop:packageRpm
          #            setupCl: ./.github/scripts/SetupClUnix.sh



          - runtime: win-x64
            arch: x64
            os: windows-latest
            shell: powershell
            build: :desktop:packageUberJarForCurrentOS :desktop:packageMsi
            setupCl: ./.github/scripts/SetupClWindows.ps1

          - runtime: android
            arch: x64
            os: ubuntu-latest
            shell: bash
            build: :android:assembleStandardRelease
            setupCl: ./.github/scripts/SetupClUnix.sh

    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    defaults:
      run:
        shell: ${{ matrix.shell }}
    steps:
      - name: Clone Repository (Latest)
        uses: actions/checkout@v3
        with:
          repository: 'ireaderorg/ireader'
          fetch-depth: 0
        if: github.event.inputs.git-ref == ''
      - name: Clone Repository (Custom Ref)
        uses: actions/checkout@v3
        if: github.event.inputs.git-ref != ''
        with:
          repository: 'ireaderorg/ireader'
          fetch-depth: 0
          ref: ${{ github.event.inputs.git-ref }}

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt

      - name: Get previous release
        id: last_release
        uses: InsonusK/get-latest-release@v1.0.1
        with:
          myToken: ${{ github.token }}
          exclude_types: "draft|prerelease"
          view_top: 1

      - uses: actions/setup-java@v3
        if: ${{ matrix.runtime != 'linux-fedora-x64' }}
        with:
          distribution: 'temurin'
          java-version: '17'
          architecture: ${{ matrix.arch }}

      - name: Setup Cl
        run: ${{ matrix.setupCl }}



      - name: Build rpm Package
        if: ${{ matrix.runtime == 'linux-fedora-x64' }}
        uses: Syer10/Fedora-Java17-Action@v1
        with:
          command: ./gradlew ${{ matrix.build }} --stacktrace

      - name: Build
        if: ${{ matrix.runtime != 'linux-fedora-x64' }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: >
            ${{ matrix.build }}

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        if: ${{ matrix.runtime == 'android' }}
        with:
          releaseDirectory: android/build/outputs/apk/standard/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      # Upload runner package tar.gz/zip as artifact
      - name: Publish Artifact
        uses: actions/upload-artifact@v3
        with:
          name: runner-package-${{ matrix.runtime }}
          path: |
            desktop/build/compose/binaries/main/*/
            desktop/build/compose/jars/
            !desktop/build/compose/binaries/main/app/
            ${{ env.SIGNED_RELEASE_FILE }}

        # Upload runner errors
      - name: Upload error logs
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: runner-errors-${{ matrix.runtime }}
          path: |
            desktop/build/compose/logs/

      - name: Prepare build
        run: |
          set -e
          commit_count=$(git rev-list --count HEAD)
          echo "COMMIT_COUNT=$commit_count" >> $GITHUB_ENV
          current_sha=$(git rev-parse --short HEAD)
          echo "CURRENT_SHA=$current_sha" >> $GITHUB_ENV
          echo last_tag=${{ steps.last_release.outputs.tag_name }}
          prev_commit_count=$(echo "${last_tag}" | sed -e "s/^r//")
          commit_count_diff=$(($commit_count - $prev_commit_count))
          prev_release_sha=$(git rev-parse --short HEAD~$commit_count_diff)
          echo "PREV_RELEASE_SHA=$prev_release_sha" >> $GITHUB_ENV
          echo "COMMIT_LOGS<<{delimiter}
          $(curl -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/ireaderorg/ireader/compare/$prev_release_sha...$current_sha" \
            | jq '[.commits[]|{message:(.commit.message | split("\n")), username:.author.login}]' \
            | jq -r '.[]|"- \(.message | first) (@\(.username))"')
          {delimiter}" >> $GITHUB_ENV
          mkdir -p ~/.android/ && echo "${{ secrets.DEBUG_KEYSTORE }}" | base64 --decode > ~/.android/debug.keystore
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "*/binaries/main/*/*.*,*/jars/*.jar,*/android/build/outputs/apk/standard/release/*.apk"
          token: ${{ secrets.WINGET_PUBLISH_PAT }}
          repo: IReader-Preview
          tag: r${{ env.COMMIT_COUNT }}
          name: Tachidesk-JUI Preview r${{ env.COMMIT_COUNT }}
          body: |
            ### Commits
            https://github.com/ireaderorg/ireader/compare/${{ env.PREV_RELEASE_SHA }}...${{ env.CURRENT_SHA }}